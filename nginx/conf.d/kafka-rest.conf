map $uri $namespace {
    ~*/topics/[0-9-]+\.(?<datasetname>[a-z0-9-]+)\..+$  $datasetname;
    default      'unmatched';
}

upstream kafka_rest_backend {
    keepalive 60;
    keepalive_requests 1000;

    server rest-proxy:8082;
}

server {
    listen 8082 default_server;
    #server_name kafka-rest-000-1.dp.nlmk.com;
    #ssl_certificate     /etc/nginx/ssl/dp.nlmk.pem;
    #ssl_certificate_key /etc/nginx/ssl/dp.nlmk.pem;

    client_max_body_size 0;
    client_body_buffer_size 50M;
    ignore_invalid_headers off;
    proxy_buffering off;


    vhost_traffic_status_filter_by_set_key $host $namespace;

    location = /auth {
      internal;
      proxy_pass http://ra:8080;
      proxy_pass_request_body     off;
      proxy_set_header Content-Length "";
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Original-Method $request_method;
      proxy_set_header X-Service "kafka-rest";

    }

    location @error403 {
      add_header X-Message $ra_error always;
      return 403 "Error: $ra_error\n";
    }

    location / {
      auth_basic "Kafka REST Restricted Area";
      auth_basic_user_file /etc/nginx/kafka_htpasswd;
      auth_request /auth;
      auth_request_set $ra_error $upstream_http_x_ra_error;
      error_page 403 = @error403;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://kafka_rest_backend;
    }
}
